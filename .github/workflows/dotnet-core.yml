name: .NET Core

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Setup Scoop
      env:
        GITHUB_TOKEN: ${{ secrets.PACKAGES_TOKEN }}
      run: |
        try {
          git config --global user.email "ninja@thesharp.ninja"
          git config --global user.name "GitHub on behalf of Sharp Ninja"
          git fetch --unshallow
          iwr -useb get.scoop.sh | iex
          scoop install gitversion

          if(-not (Test-Path GitVersion.yml)) {
            $yml = @(
              'assembly-versioning-scheme: MajorMinorPatch',
              'mode: ContinuousDelivery',
              'next-version: 1.2.0',
              'branches: {}',
              'ignore:',
              '  sha: []',
              'merge-message-formats: {}'
            )

            $yml | out-file GitVersion.yml

            git add .
            git commit -m "Added gitversion config."
            git push "https://sharpninja:${env:GITHUB_TOKEN}@github.com/sharpninja/PropertyStore.git"
          }        
          GitVersion
          
          $nugetConfig = @('<?xml version="1.0" encoding="utf-8"?>',
            '<configuration>',
                '<packageSources>',
                    '<clear />',
                    '<add key="github" value="https://nuget.pkg.github.com/OWNER/index.json" />',
                '</packageSources>',
                '<packageSourceCredentials>',
                    '<github>',
                        '<add key="Username" value="sharpninja" />',
                        ('<add key="ClearTextPassword" value="'+ $env:PUBLISH_TOKEN +'" />'),
                    '</github>',
                '</packageSourceCredentials>',
            '</configuration>')
            
          # $nugetConfig | Out-File nuget.config
          
          # dotnet nuget add source --username sharpninja --password $env:GITHUB_TOKEN --store-password-in-clear-text --name github "https://nuget.pkg.github.com/sharpninja/index.json"
        } catch {
          $e=$_
          Write-Error "Error initializing GitVersion."
          Write-Error $e
          throw $e
        }
        
    - name: Install dependencies
      run: dotnet restore
      
    - name: Setup .NET Core @ Latest
      uses: actions/setup-dotnet@v1
      with:
        source-url: https://nuget.pkg.github.com/sharpninja/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.PACKAGES_TOKEN}}        

    - name: Build
      run: dotnet build --configuration Release --no-restore
      
    - name: Test
      run: dotnet test --no-restore --verbosity normal
      
    - name: Pack
      run: dotnet pack --configuration Release --no-build -o ./out

    - name: Push generated package to GitHub registry
      run: dotnet nuget push ./out/*.nupkg --skip-duplicate --no-symbols true
